fragment scopeFields on Scope {
  __typename
  id
  name
  kind
  createdAt
  createdBy {
    ...actorFields
  }
  attributes(first: 100) {
    totalCount
    pageInfo {
      hasNextPage
      hasPreviousPage
      startCursor
      endCursor
    }
    edges {
      node {
        ...attributeFields
      }
      cursor
    }
  }
}

mutation AddScopes($input: [AddScopeInput!]!) {
  addScopes(input: $input) {
    scope {
      ...scopeFields
    }
  }
}

query Scopes(
  $filter: [ScopedAttributesInput!]
  $after: Cursor
  $first: Int
  $before: Cursor
  $last: Int
) {
  scopes(
    filter: $filter
    after: $after
    first: $first
    before: $before
    last: $last
  ) {
    edges {
      node {
        ...scopeFields
      }
    }
    totalCount
    pageInfo {
      hasNextPage
      hasPreviousPage
      startCursor
      endCursor
    }
  }
}

# TODO Add attributes querying

subscription ScopedAttributes($input: [ScopedAttributesInput!]!) {
  scopedAttributes(input: $input) {
    attribute {
      ...attributeFields
    }
    isNew
    scopesUpdated
    done
  }
}

subscription GlobalAttributes {
  globalAttributes {
    attribute {
      ...attributeFields
    }
    isNew
    done
  }
}
