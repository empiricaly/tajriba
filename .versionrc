let buildNum;
var updater = {
  readVersion: function (contents) {
    const lines = contents.split("\n");
    for (let i = 0; i < lines.length; i++) {
      if (!lines[i].startsWith("version: ")) {
        continue;
      }

      const full = lines[i].split(":")[1].trim();
      const parts = full.split("+");
      buildNum = parts[1];

      return parts[0];
    }
  },

  writeVersion: function (contents, version) {
    const out = [];

    const lines = contents.split("\n");
    for (let i = 0; i < lines.length; i++) {
      if (!lines[i].startsWith("version: ")) {
        out.push(lines[i]);
        continue;
      }

      let vers = version;
      if (buildNum) {
        const numInt = parseInt(buildNum);
        if (!Number.isNaN(numInt)) {
          vers += `+${numInt + 1}`;
        }
      }

      out.push(`version: ${vers}`);
    }

    return out.join("\n");
  },
};

module.exports = {
  packageFiles: [
    {
      filename: "pubspec.yaml",
      updater: updater,
    },
  ],
  bumpFiles: [
    {
      filename: "pubspec.yaml",
      updater: updater,
    },
  ],
  scripts: {
    prechangelog: "rm CHANGELOG.md || echo 'no changelog'",
  },
};
